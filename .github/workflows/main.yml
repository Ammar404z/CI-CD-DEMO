# Name of the workflow (shown in GitHub Actions UI)
name: CI Pipeline

# Triggers: define when this workflow should run
on:
  push:
    branches: [main] # When code is pushed to the 'main' branch
  pull_request:
    branches: [main] # When a PR is opened against 'main'
  workflow_dispatch: # Allows manual triggering in the GitHub UI

# First job: Build
jobs:
  build:
    runs-on: ubuntu-latest # The runner (virtual machine) GitHub uses
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Clones your repository code

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17" # Use Java 17
          distribution: "temurin" # Temurin = free OpenJDK builds

      - name: Build with Maven
        run: mvn compile # Compile the project

  # ✅ Second job: Test (runs after build)
  test:
    runs-on: ubuntu-latest
    needs: build # Depends on successful 'build' job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Run Tests
        run: mvn test # Execute test cases

  # Third job: Deploy (runs after test)
  deploy:
    runs-on: ubuntu-latest
    needs: test # Depends on successful 'test' job
    steps:
      - name: Fake Deploy Step
        run: echo "Deploying to production... ✅" # Placeholder for real deployment
